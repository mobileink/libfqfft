load("@bazel_skylib//rules:common_settings.bzl", "bool_flag", "string_flag", "string_setting")
load("@bazel_skylib//lib:selects.bzl", "selects")

bool_flag( name = "debug",
           build_setting_default = False)
# -DDEBUG=1
config_setting( name = "enable_debug",
                flag_values = { ":debug": "True" })
config_setting( name = "disable_debug",
                flag_values = { ":debug": "False" })

selects.config_setting_group(
    name = "macos_disable_debug",
    match_all = ["//bzl/host:macos", ":disable_debug"]
)

bool_flag( name = "verbose", build_setting_default = False,
           visibility = ["//visibility:public"])
config_setting( name = "with_verbose",
                flag_values = { ":verbose": "True" })
config_setting( name = "without_verbose",
                flag_values = { ":verbose": "False" })

string_flag( name = "curve",
             values = ["bn128", "alt_bn128", "edwards", "mnt4", "mnt6", ""],
             build_setting_default = "bn128")
string_setting( name = "bn128", build_setting_default = "bn128",
                visibility = ["//visibility:public"])
# transitive to ate_pairing:
config_setting( name = "curve_bn128",
                flag_values = { ":curve": "bn128" })
# transitive to ate_pairing:
config_setting( name = "curve_alt_bn128",
                flag_values = { ":curve": "alt_bn128" })
config_setting( name = "curve_edwards",
                flag_values = { ":curve": "edwards" })
config_setting( name = "curve_mnt4",
                flag_values = { ":curve": "mnt4" })
config_setting( name = "curve_mnt6",
                flag_values = { ":curve": "mnt6" })


##  PLATFORMS (for cross-platform builds)

platform(
    name = "x86_64-unknown-linux-gnu",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
)

platform(
    name = "armv8-rpi3-linux-gnueabihf",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:arm",
    ],
)

platform(
    name = "x86_64-linux-musl",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
        "//tc:clib_musl",
    ],
)
